package C_scenario;

/**
 * 你有一个 n x 3 的网格图 grid，你需要用红，黄，绿三种颜色之一给每一个格子上色，
 * 且确保相邻格子颜色不同（也就是有相同水平边或者垂直边的格子颜色不同）。
 *
 * 输入网格图的行数 n 。
 * 返回给 grid 涂色的方案数。由于答案可能会非常大，请你返回答案对 10^9 + 7 取余的结果。
 *
 * 链接：https://leetcode-cn.com/problems/number-of-ways-to-paint-n-3-grid
 */
public class MatrixPaint {
    public int numOfWays(int n) {
        long mod = 1000000007;
        // 采用数学递推法
        // 每一行 有两种情况，即使用两个颜色上色，或者三个颜色上色，共12种可能
        // 其中6种是用两种颜色，6种是用三种颜色
        // 当确定第一行用三种颜色，则第二行只有4种上色方案，其中2种是用三种颜色，2种是用两种颜色
        // 当确定第一行用两种颜色，则第二行只有5种上色方案，其中2种是用三种颜色，3种是用两种颜色
        // 依次向下递推
        long ans2 = 6; //第一行用两种颜色上色的方案数
        long ans3 = 6; //第一行用三种颜色上色的方案数
        for (int i = 2; i <= n; i++) {
            long tmp2 = ans2; //记录上一行用两种颜色上色的方案数
            long tmp3 = ans3; //记录上一行用三种颜色上色的方案数
            ans2 = (tmp2 * 3  + tmp3 * 2)%mod;//当前行用两种颜色上色的方案数
            ans3 = (tmp2 * 2  + tmp3 * 2)%mod;//当前行用三种颜色上色的方案数
        }
        return (int)((ans2  + ans3) % mod);
    }
}
